@model Blibox.Articulo

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Message
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Articulos")"><i class="fa fa-dashboard"></i> Articulos</a></li>
            <li class="active">@ViewBag.Message</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "form", @class = "form form-horizontal" }))
        {
            @Html.AntiForgeryToken()

        <!-- SELECT2 EXAMPLE -->
            <div class="box box-blibox box-solid">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box-header with-border">
                    <h3 class="box-title">Editar Artículo</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div><!-- /.box-header -->
                <div class="box-body">
                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label">ID Cliente</label>
                            <div class="col-md-4">
                                @Html.DropDownList(
                                     "ID_cliente",
                                     null,
                                     htmlAttributes: new
                                     {
                                         @class = "form-control",
                                         @id = "idcliente",
                                         data_fv_numeric_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe elegir el cliente",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada"
                                     })
                            </div><!-- /.col -->
                        </div>
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label no-clear-md">FOPD</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                                    model => model.ID_articulo,
                                    new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-control",
                                            @text = "number",
                                            @id = "idarticulo",
                                            data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar el identificador de artículo",
                                            required = "required",
                                            data_fv_numeric_message = "<i class='glyphicon glyphicon-info-sign'></i> El identificador de artículo debe ser numérico",
                                            data_fv_row = ".dobleEntrada"
                                        }
                                    })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Descripción</label>
                        <div class="col-md-10">
                            @Html.EditorFor(
                                 model => model.Descripcion,
                                 new
                                 {
                                     htmlAttributes = new
                                     {
                                         @class = "form-control",
                                         @id = "descripcion",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la descripción",
                                         required = "required"
                                     }
                                 })
                        </div><!-- /.col -->
                    </div><!-- /.form-group -->

                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="control-label col-md-2">Precio Costo</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                             model => model.Costo,
                             new
                             {
                                 htmlAttributes = new
                                 {
                                     @class = "form-control",
                                     @id = "costo",
                                     data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar el costo",
                                     required = "required",
                                     data_fv_row = ".dobleEntrada"
                                 }
                             })
                            </div>
                        </div>
                        <div class="dobleEntrada">

                            <label class="control-label col-md-2 no-clear-md">Precio Lista</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                                 model => model.Precio_lista,
                                 new
                                 {
                                     htmlAttributes = new
                                     {
                                         @class = "form-control",
                                         @id = "precioLista",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar el precio de lista",
                                         data_fv_numeric_message = "<i class='glyphicon glyphicon-info-sign'></i> El precio de lista debe ser numérico",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada"
                                     }
                                 })
                            </div>
                        </div>
                    </div><!-- /.form-group -->

                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="control-label col-md-2">Fecha Precio Lista:</label>
                            <div class="col-md-4 input">
                                @Html.EditorFor(
                                 model => model.Precio_fecha,
                                 new
                                 {
                                     htmlAttributes = new
                                     {
                                         @class = "form-control  pull-right",
                                         id = "fechaPrecioLista",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la fecha límite del precio de lista",
                                         data_fv_date_message = "<i class='glyphicon glyphicon-info-sign'></i> La fecha límite del precio de lista debe ser una fecha válida",
                                         data_fv_date_format = "DD/MM/YYYY ",
                                         data_fv_date = true,
                                         required = "required",
                                         placeholder = "dd/mm/yyyy",
                                         type = "text",
                                         data_fv_row = ".dobleEntrada"
                                     }
                                 })
                                <!--i class="input-group-addon fa fa-calendar"></!i-->
                            </div><!-- /.input group -->
                        </div>
                        @*<div class="dobleEntrada">
                            <label class="control-label col-md-2 no-clear-md">IVA</label>
                            <div class="col-md-1 checkbox">
                                <div class="radio">
                                    @Html.RadioButtonFor(model => model.IVA, "Si", new
                               {
                                   data_fv_choice = "true",
                                   data_fv_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe seleccionar una opción",
                                   data_fv_row = ".dobleEntrada",
                                   label = "Si",
                                   @class = "styled",
                                   @id = "ivaSi"

                               })
                                    <label for="ivaSi">Si</label>
                                </div>

                                <div class="radio">
                                    @Html.RadioButtonFor(model => model.IVA, "No", new
                               {
                                   label = "Si",
                                   @class = "styled",
                                   @id = "ivaNo"

                               })
                                    <label for="ivaNo">No</label>
                                </div>
                            </div>
                        </div>*@
                        @*<div class="dobleEntrada">
                            <label class="control-label col-md-2 no-clear-md">Fazón</label>
                            <div class="col-md-1 checkbox">
                                <div class="radio">

                                    @Html.RadioButtonFor(model => model.Fazon, "No", new
                               {

                                   data_fv_choice = "true",
                                   data_fv_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe seleccionar una opción",
                                   data_fv_row = ".dobleEntrada",
                                   label = "Si",
                                   @class = "styled",
                                   @id = "fazonSi"

                               })
                                    <label for="fazonSi">Si</label>
                                </div>
                                <div class="radio">

                                    @Html.RadioButtonFor(model => model.Fazon, "No", new
                               {
                                   label = "No",
                                   @class = "styled",
                                   @id = "fazonNo"
                               })
                                    <label for="fazonNo">No</label>
                                </div>

                            </div> /.form-group 
                        </div>*@
                    </div><!-- /.form-group -->
                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="control-label col-md-2">Stock</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                                model => model.Stock,
                                new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control",
                                        @text = "number",
                                        @id = "stock",
                                        data_fv_numeric_message = "<i class='glyphicon glyphicon-info-sign'></i> El stock debe ser numérico",
                                        data_fv_row = ".dobleEntrada"
                                    }
                                })
                            </div><!-- /.col -->
                        </div>
                        <div class="dobleEntrada">
                            <label class="control-label col-md-2 no-clear-md">Stock Minimo</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                            model => model.Stock_minimo,
                            new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control",
                                    @text = "number",
                                    @id = "stockMinimo",
                                    data_fv_numeric_message = "<i class='glyphicon glyphicon-info-sign'></i> La cantidad de stock mínimo debe ser numérico",
                                    data_fv_row = ".dobleEntrada"
                                }
                            })
                            </div>
                        </div>

                    </div><!-- /.form-group -->
                    <div class="form-group">
                        <label class="control-label col-md-2">Cantidad por bulto</label>
                        <div class="col-md-4">
                            @Html.EditorFor(
                                model => model.Cant_x_bulto,
                                new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control",
                                        @id = "cantXBulto",
                                        data_fv_number_message = "<i class='glyphicon glyphicon-info-sign'></i> La cantidad por bulto debe ser numérica",
                                        @text = "number"
                                    }
                                })
                        </div>
                        <label class="control-label col-md-2 no-clear-md">Tamaño Caja</label>
                        <div class="col-md-4">
                            @Html.EditorFor(
                                model => model.Tamaño_caja,
                                new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control",
                                        @id = "cantXBulto",
                                        data_fv_number_message = "<i class='glyphicon glyphicon-info-sign'></i> El tamaño de la caja debe ser numérico",
                                        @text = "number"
                                    }
                                })
                        </div><!-- /.col -->
                    </div><!-- /.form-group -->
                    <div class="form-group">
                        <label class="control-label col-md-2">Tiraje Term. por Hora</label>
                        <div class="col-md-4">
                            @Html.EditorFor(
                                model => model.Tiraje_term_x_hora,
                                new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control",
                                        @id = "tirajeTermXHora",
                                        data_fv_number_message = "<i class='glyphicon glyphicon-info-sign'></i> El tiraje por hora debe ser numérico",
                                        @text = "number"
                                    }
                                })
                        </div>
                        <label class="control-label col-md-2 no-clear-md">Tiraje troquel por hora</label>
                        <div class="col-md-4">
                            @Html.EditorFor(
                                    model => model.Tiraje_troquel_x_hora,
                                    new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-control",
                                            @id = "tirajeTroquelXHora",
                                            data_fv_number_message = "<i class='glyphicon glyphicon-info-sign'></i> El tiraje del troquel por hora debe ser numérico",
                                            @text = "number",
                                            @rows = 5
                                        }
                                    })
                        </div><!-- /.col -->
                    </div><!-- /.form-group -->
                    <div class="form-group">
                        <label class="control-label col-md-2">Observaciones</label>
                        <div class="col-md-10">
                            @Html.EditorFor(
                            model => model.Observaciones,
                            new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control",
                                    @id = "observaciones",
                                    data_fv_stringlength_message = "<i class='glyphicon glyphicon-info-sign'></i> Observaciones no válidas",
                                    data_fv_stringlength_min = 0,
                                    data_fv_stringlength = "true"
                                }
                            })
                        </div><!-- /.col -->
                    </div><!-- /.form-group -->
                    <!--Agregar componenetes-->

                    <br />
                    @if (Model != null && Model.Componente != null && Model.Componente.Count < 3)
                    {
                        <button type="button" class="btn btn-addmore ">@Html.ActionLink("Agregar Componente", "AgregarComponente", new { Id = Model.ID_articulo })</button>
                    }

                    <br /><br />

                    @if (Model != null && Model.Componente != null && Model.Componente.Count > 0)
                    {

                        var i = 0;
                        var nro = 1 + i;

                        
                        //ViewBag.idArticulo = Model.ID_articulo;
                        foreach (var item in Model.Componente)
                        {
                            // ViewBag.comp[i] = item.ID_componente;

                            <div class="box box-componente box-solid collapsed-box">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Componente @nro</h3>
                                    <div class="box-tools pull-right">
                                        <button id="btnCollapse" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                                    </div><!-- /.box-tools -->
                                </div><!-- /.box-header -->
                                <div class="box-body">
                                    @Html.Editor("Componente[" + i + "].ID_Componente", item.ID_componente.ToString(), new { htmlAttributes = new { @Value = item.ID_componente, @style = "display: none" } })
                                    @Html.Editor("Componente[" + i + "].ID_articulo", item.ID_articulo.ToString(), new { htmlAttributes = new { @Value = item.ID_articulo, @style = "display: none" } })
                                   
                                    
                                     <div class="form-group">
                                        <div class="dobleEntrada">
                                            <label class="col-md-2 control-label">Material</label>
                                            <div class="col-md-4">
                                                @Html.DropDownList("Componente[" + i + "].ID_material", new SelectList(ViewBag.Mat_Descripcion, "ID_material", "Descripcion", item.ID_material), htmlAttributes: new { @id = "Componente" + i + "IDmaterial", @class = "form-control", onchange = "calcularPeso(" + i + ")" })
                                            </div>
                                        </div>
                                        <div class="dobleEntrada">
                                            <label class="control-label col-md-2 no-clear-md">Peso</label>
                                            <div class="col-md-4">
                                                @Html.Editor("Componente[" + i + "].Peso", item.Peso.ToString().Replace(".",","), new { htmlAttributes = new { @Value = item.Peso, @id = "Componente" + i + "Peso", @class = "form-control", @disabled = "" } })
                                            </div>
                                        </div>
                                    </div><!-- /.form-group -->
                                    <div class="form-group">
                                        <div class="dobleEntrada">
                                            <label class="col-md-2 control-label">Color</label>
                                            <div class="col-md-4">
                                                @Html.Editor("Componente[" + i + "].Color", item.Color, new { htmlAttributes = new { @Value = item.Color, @class = "form-control" } })
                                                @*@Html.ValidationMessage(item.Color.ToString(), new { @class = "text-danger" })*@
                                            </div>
                                        </div>
                                        <div class="dobleEntrada">
                                            <label class="control-label col-md-2 no-clear-md">Ciclo</label>
                                            <div class="col-md-4">
                                                @Html.Editor("Componente[" + i + "].Ciclos", item.Ciclos, new { htmlAttributes = new { @Value = item.Ciclos, @class = "form-control" } })
                                            </div>
                                        </div>
                                    </div><!-- /.form-group -->
                                    <div class="form-group">
                                        <div class="dobleEntrada">
                                            <label class="col-md-2 control-label">Bocas</label>
                                            <div class="col-md-4">
                                                @Html.Editor("Componente[" + i + "].Bocas", item.Bocas, new { htmlAttributes = new { @Value = item.Bocas, @id = "Componente[" + i + "].Bocas", @class = "form-control", onchange = "calcularPeso(" + i + ")" } })
                                            </div>
                                        </div>
                                        <div class="dobleEntrada">
                                            <label class="control-label col-md-2 no-clear-md">Espesor</label>                 
                                            <div class="col-md-4">
                                                @Html.Editor("Componente[" + i + "].Espesor", item.Espesor, new { htmlAttributes = new { @Value = item.Espesor, @id = "Componente[" + i + "].Espesor", @class = "form-control", onchange = "calcularPeso(" + i + ")" } })
                                                @*@Html.ValidationMessageFor(model => model.Componente.ElementAt(0).Espesor, "", new { @class = "text-danger" })*@
                                            </div>
                                        </div>
                                    </div><!-- /.form-group -->
                                    <div class="form-group">
                                        <div class="dobleEntrada">
                                            <label class="control-label col-md-2">Matriz</label>
                                            <div class="col-md-4">
                                                @Html.DropDownList("Componente[" + i + "].ID_matriz", new SelectList(ViewBag.Matriz, "ID_matriz", "Codigo", item.ID_matriz), htmlAttributes: new { @id = "Componente" + i + "IDmatriz", @class = "form-control" })
                                            </div>
                                        </div><!-- /.col -->
                                        <div class="dobleEntrada">
                                            <label class="no-clear-md col-md-2 control-label">Cortante</label>
                                            <div class="col-md-4">
                                                @Html.DropDownList("Componente[" + i + "].ID_cortante", new SelectList(ViewBag.cortante, "ID_cortante", "Descripcion", item.ID_cortante), htmlAttributes: new { @id = "Componente" + i + "IDcortante", @class = "form-control" })
                                                @*@Html.DropDownList("Cortante_codigo1", (SelectList)ViewBag.cortante)*@
                                            </div>
                                        </div><!-- /.col -->
                                    </div><!-- /.form-group -->
                                    <div class="form-group">
                                        <div class="dobleEntrada">
                                            <label class="col-md-2 control-label">Marco</label>
                                            <div class="col-md-4">
                                                @Html.DropDownList("Componente[" + i + "].ID_marco", new SelectList(ViewBag.Marco, "ID_marco", "Descripcion", item.ID_marco), htmlAttributes: new { @id = "Componente" + i + "IDmarco", @class = "form-control", onchange = "calcularPeso(" + i + ")" })
                                            </div>
                                        </div>
                                        <!-- ko if: $index()!=0 -->
                                            <div class="col-md-6">
                                                <button type="button" class="btn btn-danger pull-right">@Html.ActionLink("Eliminar", "eliminarComponente", new { Id = item.ID_componente })</button>
                                            </div>
                                        <!-- /ko -->
                                    </div>
                                </div>
                            </div> <!-- /.box-body -->

                            i++; nro++;
                        }
                    }

                    <div class="form-group">
                        <div class="box-footer">
                            <input type="submit" value="Actualizar" class="btn btn-add" />
                        </div>
                    </div>
                </div><!-- /.box-body -->
            </div><!-- /.box -->
        }

        <div>
            <button type="button" class="btn btn-cancel ">@Html.ActionLink("Volver", "Index")</button>
        </div>

    </section>
</div><!-- /.content-wrapper -->

<script type="text/javascript">
    window.onload = function () {
        //funciones a ejecutar
        var comp = "Componente0Peso";
        var peso = $("#" + comp).val().toString().replace(".", ",");
        $("#" + comp).val(peso);
        var comp = "Componente1Peso";
        var peso = $("#" + comp).val().toString().replace(".", ",");
        $("#" + comp).val(peso);
        var comp = "Componente2Peso";
        var peso = $("#" + comp).val().toString().replace(".", ",");
        $("#" + comp).val(peso);
    };
    validarForm('#form');
    inicializarDatePicker('#fechaPrecioLista', false, false);
</script>
<script>

    //$('#agregarComponente').click();
    function calcularPeso(numeroComponente) {
        var idComponete = "Componente[" + numeroComponente + "]";
        var idComponeteSinParentesis = "Componente" + numeroComponente + "";
        var marco = "";
        $("#" + idComponeteSinParentesis + "IDmarco option:selected").each(function () {
            marco += $(this)[0].value;
        });
        var material = ""; 
        $("#" + idComponeteSinParentesis + "IDmaterial option:selected").each(function () {
            material += $(this)[0].value;
        });
        var bocas = document.getElementById("Componente[" + numeroComponente + "].Bocas").value;
        var espesor = document.getElementById("Componente[" + numeroComponente + "].Espesor").value;

        console.log("{'marcoId': " + marco + ", 'materialId': " + material + ", 'bocas': " + bocas + ", 'espesor': " + espesor + "}");
        $.ajax({
            type: "POST",
            url: "@Url.Action("calcularPeso", "Articulos")",
            data: "{'marcoId': " + marco + ", 'materialId': " + material + ", 'bocas': " + bocas + ", 'espesor': " + espesor + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    var peso = data.peso.toString().replace(".", ",")
                    $("#" + idComponeteSinParentesis + "Peso").val(peso);
                    debugger;
                }
            },
            error: function (request, status, error) {
                console.log(error);
                console.log(request.responseText);
            }

    });

}
</script>

