@model PagedList.IPagedList<Blibox.Articulo>
@using PagedList.Mvc;

@*@model IEnumerable<Blibox.Articulo>*@


@{
    ViewBag.Title = "Index";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Message
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">@ViewBag.Message</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">

        <div class="row">
            <div class="col-md-4">
                <button type="button" class="btn btn-info ">@Html.ActionLink("NUEVO ARTICULO", "Create")</button>
            </div>

            @{ string currentFilter = ViewBag.CurrentFilter;
            string currentSort = ViewBag.CurrentSort;
            if (string.IsNullOrEmpty(currentSort))
            {
                currentSort = "id";
            } }
            <div class="col-md-4"></div>
            <div class="search-box col-md-4">
                <form class="form-inline">
                    <div class="form-group">
                        <input type="text" name="q" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Search..." />
                        <button type="submit" class="btn btn-info">Buscar</button>
                    </div>
                   
                </form>
            </div>
        </div>
        

        @*@using (Html.BeginForm())
        {
            <p>
                BUSCADOR DE ARTICULOS:
                <br />
                @Html.DropDownList("Items")
                <br />
                @Html.TextBox("SearchString")

                <button type="submit" class="btn btn-info">
                    <span class="glyphicon glyphicon-search"></span> Buscar
                </button>
            </p>


        }*@

       
        <br />

        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Articulos</h3>
            </div>
            <table class="table table-striped table-bordered table-condensed">
                <tr>
                    <th >
                           @Html.ActionLink( "Id", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.IdSortParam))
                        @Html.SortIdentifier(currentSort, "id")
                    </th>
                    <th>
                        @Html.ActionLink("Descripcion", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.DescripcionSort))
                        @Html.SortIdentifier(currentSort, "descripcion")
                    </th>
                    
                    <th>@Html.DisplayName("Costo")</th>
                    @*<th style="width: 40px">@Html.DisplayName("IVA")</th>*@
                    <th>@Html.DisplayName("Precio lista")</th>
                    <th>@Html.DisplayName("Precio fecha")</th>
                    <th>@Html.DisplayName("Stock")</th>
                    <th>@Html.DisplayName("Observaciones")</th>
                    <th>@Html.DisplayName("Razon Social")</th>
                    <th>OPCIONES</th>
                </tr>
                @foreach (var item in Model)
                {
                   <tr>
                        <td>@Html.DisplayFor(model => item.ID_articulo)</td>
                        <td>@Html.DisplayFor(model => item.Descripcion)</td>
                        <td>@Html.DisplayFor(model => item.Costo)</td>
                        @*<td>@Html.DisplayFor(model => item.IVA)</td>*@
                        <td>@Html.DisplayFor(model => item.Precio_lista)</td>
                        <td>@Html.DisplayFor(model => item.Precio_fecha.ToString().Split(' ')[0])</td>
                        <td>@Html.DisplayFor(model => item.Stock)</td>
                        <td>@Html.DisplayFor(model => item.Observaciones)</td>
                       
                        <td> @Html.DisplayFor(model => item.Cliente.Razon_Social)</td>
                        <td class="accion">
                            <a href="@Url.Action("Details", new { id = item.ID_articulo })" title="Ver" class="">
                                <i class="glyphicon glyphicon-eye-open"></i>
                                <span class="sr-only">Ver</span>
                            </a>
                            <a href="@Url.Action("Edit", new { id = item.ID_articulo })"  title="Editar">
                                <i class="glyphicon glyphicon-edit"></i>
                                <span class="sr-only">Editar</span>
                            </a>
                            <a href="@Url.Action("Delete", new { id = item.ID_articulo })" title="Eliminar">
                                <i class="glyphicon glyphicon-remove"></i>
                                <span class="sr-only">Eliminar</span>
                            </a>
                        </td>
                   </tr>
                }
               
                
            </table>
        </div>
        
        @if (Model.PageCount > 1)
        {
            <div class="pager">
                @Html.PagedListPager(Model, page => Url.Action("Index", new
           {
               page,
               sortOrder = ViewBag.currentSort,
               q = ViewBag.CurrentFilter
           }))
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
        }
    </section>
</div><!-- /.content-wrapper -->

