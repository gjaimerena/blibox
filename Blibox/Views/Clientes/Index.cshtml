@model PagedList.IPagedList<Blibox.Cliente>
@using PagedList.Mvc;
@*@model IEnumerable<Blibox.Cliente>*@

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Message
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Clientes")"><i class="fa fa-dashboard"></i> Clientes</a></li>
            <li class="active">@ViewBag.Message</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        
            <p>
                <button type="button" class="btn btn-new ">@Html.ActionLink("NUEVO CLIENTE", "Create")</button>
            </p>

            @{ string currentFilter = ViewBag.CurrentFilter;
            string currentSort = ViewBag.CurrentSort;
            if (string.IsNullOrEmpty(currentSort))
            {
                currentSort = "id";
            } }
          
        <div class="search-box">
            <form class="form-inline">
                <div class="form-group">
                    <input type="text" name="q" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Buscar..." />
                </div>
                <button type="submit" class="btn btn-search">Buscar</button>
            </form>
        </div>
      

        <br />

        <div class="box box-blibox box-solid">
            <div class="box-header with-border">
                <h3 class="box-title">Clientes</h3>
            </div>
            <table class="table table-striped table-bordered table-condensed">
                        <tr>
                            <th>@Html.DisplayName("ID Cliente")</th>
                            <th>@Html.DisplayName("Razon Social")</th>
                            <th>@Html.DisplayName("CUIT")</th>
                            <th>@Html.DisplayName("Telefono")</th>
                            <th>@Html.DisplayName("Email")</th>
                            @*<th>@Html.DisplayName("Domicilio")</th>
                                <th>@Html.DisplayName("Localidad")</th>
                                <th>@Html.DisplayName("Provincia")</th>
                                <th>@Html.DisplayName("Rubro")</th>*@
                            <th>@Html.DisplayName("Vendedor")</th>
                            <th>OPCIONES</th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(model => item.ID_cliente)</td>
                                <td>@Html.DisplayFor(model => item.Razon_Social)</td>
                                <td>@Html.DisplayFor(model => item.Documento)</td>
                                <td>@Html.DisplayFor(model => item.Telefono)</td>
                                <td>@Html.DisplayFor(model => item.Email)</td>
                                @*<td>@Html.DisplayFor(model => item.Domicilio)</td>
                                    <td>@Html.DisplayFor(model => item.Localidad)</td>
                                    <td>@Html.DisplayFor(model => item.Provincia)</td>
                                    <td>@Html.DisplayFor(model => item.Rubro.Descirpcion)</td>*@
                                <td> @Html.DisplayFor(model => item.Vendedor.ID_vendedor)</td>
                                <td class="accion">
                                    <a href="@Url.Action("Details", new { id = item.ID_cliente })" title="Ver" class="">
                                        <i class="glyphicon glyphicon-zoom-in"></i>
                                        <span class="sr-only">Ver</span>
                                    </a>
                                    <a href="@Url.Action("Edit", new { id = item.ID_cliente })" title="Editar">
                                        <i class="glyphicon glyphicon-edit"></i>
                                        <span class="sr-only">Editar</span>
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = item.ID_cliente })" title="Eliminar">
                                        <i class="glyphicon glyphicon-trash"></i>
                                        <span class="sr-only">Eliminar</span>
                                    </a>
                                </td>
                            </tr>
                        }


                    </table>
                </div>

                @if (Model.PageCount > 1)
                {
                    <div class="pager">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new
           {
               page,
               sortOrder = ViewBag.currentSort,
               q = ViewBag.CurrentFilter
           }))
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    </div>
                }



    </section>
</div><!-- /.content-wrapper -->