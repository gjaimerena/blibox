@model PagedList.IPagedList<Blibox.Models.Pedidos>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Message
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index","Pedidos")"><i class="fa fa-dashboard"></i> Pedidos</a></li>
            <li class="active">@ViewBag.Message</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">

        <p>
            <button type="button" class="btn btn-new ">@Html.ActionLink("NUEVO PEDIDO", "Create")</button>
        </p>

        @{ string currentFilter = ViewBag.CurrentFilter;
            string currentSort = ViewBag.CurrentSort;
            if (string.IsNullOrEmpty(currentSort))
            {
                currentSort = "id";
            } }
        <div class="search-box">
            <form class="form-inline">
                <div class="form-group">
                    <input type="text" name="q" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Buscar..." />
                </div>
                <button type="submit" class="btn btn-search">Buscar</button>
            </form>
        </div>

        <br />
        <div class="box box-blibox box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">Pedidos </h3>
                </div>
                <table class="table table-bordered table-condensed">
                    <tr>
                        <th>@Html.DisplayName("N° Pedido")</th>
                        <th>@Html.DisplayName("Cliente")</th>
                        <th>@Html.DisplayName("N° Articulo")</th>
                        <th>@Html.DisplayName("Articulo")</th>
                        <th>@Html.DisplayName("Componente 1")</th>
                        <th>@Html.DisplayName("Componente 2")</th>
                        <th>@Html.DisplayName("Componente 3")</th>
                        <th>@Html.DisplayName("Pedido")</th>
                        <th>@Html.DisplayName("Entregado")</th>
                        <th>@Html.DisplayName("Faltantes")</th>

                        <th style="width: 8%;">OPCIONES</th>
                    </tr>
                   
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(model => item.idPedido)</td>
                            <td>@Html.DisplayFor(model => item.cliente)</td>
                            <td>@Html.DisplayFor(model => item.idArticulo)</td>
                            <td>@Html.DisplayFor(model => item.descArticulo)</td>
                           
                            <td>@Html.DisplayFor(model => item.componente1)</td>
                            <td>@Html.DisplayFor(model => item.componente2)</td>
                            <td>@Html.DisplayFor(model => item.componente3)</td>
                           
                            <!-- materia, bocas, espesor, peso necesario-->
                            
                            <td>@Html.DisplayFor(model => item.cantPedida)</td>
                            <td>@Html.DisplayFor(model => item.cantEntregada)</td>
                            <td>@Html.DisplayFor(model => item.cantRestante)</td>
                            
                          
                            <td class="accion">

                                <a href="@Url.Action("Details", new { id = item.idPedido })" title="Ver" class="">
                                    <i class="glyphicon glyphicon-zoom-in"></i>
                                    <span class="sr-only">Ver</span>
                                </a>
                                <a href="@Url.Action("Edit", new { id = item.idPedido })" title="Editar">
                                    <i class="glyphicon glyphicon-edit"></i>
                                    <span class="sr-only">Editar</span>
                                </a>
                                <a href="@Url.Action("Delete", new { id = item.idPedido })" title="Eliminar">
                                    <i class="glyphicon glyphicon-trash"></i>
                                    <span class="sr-only">Eliminar</span>
                                </a>

                            </td>
                        </tr>
                    }
                </table>

            * Los Componentes estan indicados de la forma:  "Material / bocas / espesor / kgs restantes"
           


            @if (Model.PageCount > 1)
            {
                <div class="pager">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new
               {
                   page,
                   sortOrder = ViewBag.currentSort,
                   q = ViewBag.CurrentFilter
               }))
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>
            }
        </div>

        @using (Html.BeginForm("ExportData", "Pedidos", FormMethod.Post))
            {
            <input type="submit" name="btnexportPedido" value="Exportar" id="exportPedido" class="btn btn-add" />
        }

        @using (Html.BeginForm("HistoricoPedidos", "Pedidos", FormMethod.Post))
            {
            <input type="submit" name="btnpedidocumplido" value="Pedidos Cumplidos" id="pedidocumplido" class="btn btn-add" />
        }
    </section>
</div><!-- /.content-wrapper -->
