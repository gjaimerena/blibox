@model Blibox.Pedido

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Message
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Pedidos</a></li>
            <li class="active">@ViewBag.Message</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "form", @class = "form form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="box box-blibox box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">Editar Pedido</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div><!-- /.box-header -->

                <div class="box-body">
                    <div class="form-group">
                        <div class="dobleEntrada">
                            @Html.LabelFor(model => model.ID_cliente, "Cliente:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList(
                                     "ID_cliente",
                                     null,
                                     htmlAttributes: new
                                     {
                                         @class = "form-control",
                                         @id = "id_cliente",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe elegir el cliente",
                                         data_fv_notempty = "true",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada",
                                         onchange = "onChangeCliente();"
                                     })
                            </div>
                        </div>
                        <div class="dobleEntrada">
                            @Html.LabelFor(model => model.Articulo, "Articulo:", htmlAttributes: new { @class = "control-label col-md-2 no-clear-md" })
                            <div class="col-md-4">
                                @Html.DropDownList(
                                     "ID_articulo",
                                     null,
                                     htmlAttributes: new
                                     {
                                         @class = "form-control",
                                         @id = "Articulo",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe elegir el artículo",
                                         data_fv_notempty = "true",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada"
                                     })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="dobleEntrada">

                            <label class="col-md-2 control-label">Cantidad pedida:</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                                 model => model.cantidad_pedida,
                                 new
                                 {
                                     htmlAttributes = new
                                     {
                                         @class = "form-control",
                                         @text = "number",
                                         @id = "CantidadPedida",
                                         data_fv_numeric_message = "<i class='glyphicon glyphicon-info-sign'></i> La cantidad pedida debe ser numérica",
                                         data_fv_numeric = "true",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la cantidad pedida",
                                         required = "true",
                                         min = 0,
                                         data_fv_greaterthan_message = "<i class='glyphicon glyphicon-info-sign'></i> La cantidad pedida debe ser mayor a 0",
                                         data_fv_greaterthan_value = 0,
                                         data_fv_greaterthan = "true",
                                         data_fv_row = ".dobleEntrada"
                                     }
                                 })
                            </div>
                        </div>
                        <div class="dobleEntrada hidden">
                            @Html.LabelFor(model => model.cantidad_entregada, "Cantidad entregada:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <div class="input-group">
                                    @Html.EditorFor(
                                     model => model.cantidad_entregada,
                                     new
                                     {
                                         @class = "form-control",
                                         @id = "cantidadEntregada",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la cantidad entregada",
                                         data_fv_notempty = "true",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada",
                                         value = 0
                                     })
                                </div>
                            </div>
                        </div>
                        <div class="dobleEntrada hidden">
                            @Html.LabelFor(model => model.Fecha_pedido, "Fecha pedido:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <div class="input-group">
                                    @Html.EditorFor(
                                     model => model.Fecha_pedido,
                                     new
                                     {
                                         @class = "form-control",
                                         @id = "fechaPedido",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la fecha del pedido",
                                         data_fv_notempty = "true",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada",
                                         value = DateTime.Now
                                     })
                                </div>
                            </div>
                        </div>
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label no-clear-md">Orden de compra:</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                                 model => model.Orden_compra,
                                 new
                                 {
                                     htmlAttributes = new
                                     {
                                         @class = "form-control",
                                         @text = "text",
                                         @id = "ordenCompra",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la orden de compra",
                                         required = "true",
                                         data_fv_row = ".dobleEntrada"
                                     }
                                 })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label">Armado:</label>
                            <div class="col-md-4">
                                @Html.DropDownList(
                                     "armado",
                                     null,
                                     htmlAttributes: new
                                     {
                                         @class = "form-control",
                                         @id = "armado",
                                         data_fv_stringlength_message = "<i class='glyphicon glyphicon-info-sign'></i> Armado no valido",
                                         data_fv_stringlength_min = 0,
                                         data_fv_stringlength = "true",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar el armado",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada"
                                     })

                            </div>
                        </div>
                        <div class="dobleEntrada">
                            <label class="control-label col-md-2  no-clear-md">Fecha Armado:</label>
                            <div class="col-md-4 input">
                                @Html.EditorFor(
                                 model => model.Fecha_armado,
                                 new
                                 {
                                     htmlAttributes = new
                                     {
                                         @class = "form-control  pull-right",
                                         id = "Fecha_armado",
                                         //name = "fechaArmado",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la fecha de armado",
                                         data_fv_date_message = "<i class='glyphicon glyphicon-info-sign'></i> La fecha de armado debe ser una fecha válida",
                                         data_fv_date_format = "DD/MM/YYYY",
                                         data_fv_date = true,
                                         required = "required",
                                         placeholder = "dd/mm/yyyy",
                                         type = "text",
                                         data_fv_row = ".dobleEntrada"
                                     }
                                 })
                                <!--i class="input-group-addon fa fa-calendar"></!i-->
                            </div><!-- /.input group -->
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="control-label col-md-2">Fecha Entrega:</label>
                            <div class="col-md-4 input">
                                @Html.EditorFor(
                                 model => model.Fecha_entrega,
                                 new
                                 {
                                     htmlAttributes = new
                                     {
                                         @class = "form-control  pull-right",
                                         id = "Fecha_entrega",
                                         //name = "fechaEntrega",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar la fecha de entrega",
                                         data_fv_date_message = "<i class='glyphicon glyphicon-info-sign'></i> La fecha de entrega debe ser una fecha válida",
                                         data_fv_date_format = "DD/MM/YYYY",
                                         data_fv_date = true,
                                         required = "required",
                                         placeholder = "dd/mm/yyyy",
                                         type = "text",
                                         data_fv_row = ".dobleEntrada"
                                     }
                                 })
                                <!--i class="input-group-addon fa fa-calendar"></!i-->
                            </div><!-- /.input group -->
                        </div>
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label no-clear-md">Precio:</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                     model => model.Precio,
                     new
                     {
                         htmlAttributes = new
                         {
                             @class = "form-control",
                             @text = "number",
                             @id = "precio",
                             data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe ingresar el precio",
                             data_fv_numeric = "true",
                             data_fv_numeric_message = "<i class='glyphicon glyphicon-info-sign'></i> El precio debe ser numerico",
                             required = "required",
                             data_fv_row = ".dobleEntrada"
                         }
                     })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label">Observaciones:</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                     model => model.Observaciones,
                     new
                     {
                         htmlAttributes = new
                         {
                             @class = "form-control",
                             @text = "text",
                             @id = "observaciones",
                             data_fv_stringlength_message = "<i class='glyphicon glyphicon-info-sign'></i> Observaciones no válidas",
                             data_fv_stringlength_min = 0,
                             data_fv_stringlength = "true",
                             data_fv_row = ".dobleEntrada"
                         }
                     })
                            </div>
                        </div>
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label no-clear-md">Impreso:</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                     model => model.Impreso,
                     new
                     {
                         htmlAttributes = new
                         {
                             @class = "form-control",
                             @text = "text",
                             @id = "impreso",
                             data_fv_stringlength_message = "<i class='glyphicon glyphicon-info-sign'></i> Impreso no valido",
                             data_fv_stringlength_min = 0,
                             data_fv_stringlength = "true",
                             data_fv_row = ".dobleEntrada"
                         }
                     })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label">Vendedor:</label>
                            <div class="col-md-4">
                                @Html.DropDownList(
                                     "ID_vendedor",
                                     null,
                                     htmlAttributes: new
                                     {
                                         @class = "form-control",
                                         @id = "id_vendedor",
                                         data_fv_notempty_message = "<i class='glyphicon glyphicon-info-sign'></i> Debe elegir el vendedor",
                                         data_fv_notempty = "true",
                                         required = "required",
                                         data_fv_row = ".dobleEntrada"
                                     })
                            </div>
                        </div>
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label no-clear-md">Importe matriz:</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                     model => model.Importe_matriz,
                     new
                     {
                         htmlAttributes = new
                         {
                             @class = "form-control",
                             @text = "text",
                             @id = "importeMatriz",
                             data_fv_stringlength_message = "<i class='glyphicon glyphicon-info-sign'></i> Importe matriz no valido",
                             data_fv_stringlength_min = 0,
                             data_fv_stringlength = "true",
                             data_fv_row = ".dobleEntrada"
                         }
                     })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label">Tipo caja:</label>
                            <div class="col-md-4">
                                @Html.DropDownList(
                                     "tipoCaja",
                                     null,
                                     htmlAttributes: new
                                     {
                                         @class = "form-control",
                                         @id = "tipoCaja",
                                         data_fv_stringlength_message = "<i class='glyphicon glyphicon-info-sign'></i> Tipo caja no valida",
                                         data_fv_stringlength_min = 0,
                                         data_fv_stringlength = "true",
                                         data_fv_row = ".dobleEntrada"
                                     })
                            </div>
                        </div>
                        <div class="dobleEntrada">
                            <label class="col-md-2 control-label no-clear-md">Codigo articulo cliente:</label>
                            <div class="col-md-4">
                                @Html.EditorFor(
                     model => model.Codigo_articulo_interno_cliente,
                     new
                     {
                         htmlAttributes = new
                         {
                             @class = "form-control",
                             @text = "text",
                             @id = "codigoArticuloCliente",
                             data_fv_stringlength_message = "<i class='glyphicon glyphicon-info-sign'></i> Codigo articulo cliente no valido",
                             data_fv_stringlength_min = 0,
                             data_fv_stringlength = "true",
                             data_fv_row = ".dobleEntrada"
                         }
                     })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.EditorFor(
                model => model.ID_pedido,
                new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control hidden",
                        @text = "hidden",
                        @id = "ID_pedido",
                    }
                })
                <input type="submit" value="Actualizar" class="btn btn-add" /> |
                <button type="button" class="btn btn-cancel ">@Html.ActionLink("Cancelar", "Index")</button>
            </div>
        }
    </section>

</div><!-- /.content-wrapper -->
<script type="text/javascript">
    inicializarDatePicker('#Fecha_armado', false, false);
    inicializarDatePicker('#Fecha_entrega', false, false);
    validarForm('#form');

    function onChangeCliente() {
        var strSelected = "";
        $("#id_cliente option:selected").each(function () {
            strSelected += $(this)[0].value;
        });
        $.ajax({
            type: "POST",
            url: "@Url.Action("obtenerDatosCliente", "Factura")",
            data: "{'idCliente': " + strSelected + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    /*
                    $('#CUIT').val(data.Documento);
                    $('#TipoResp').val(data.TipoResponsable)
                    $("#DiasFF").val(data.DiasFF);
                    $("#Dias_Cheque").val(data.Dias_Cheque);
                    */
                    var select = $("#Articulo");
                    select.empty();
                    for (var articulo in data.Articulos) {

                        var option = document.createElement('option');
                        option.innerHTML = data.Articulos[articulo].Descripcion;
                        option.value = data.Articulos[articulo].ID_articulo;
                        select.append(option);
                    }
                }
            },
            error: function (request, status, error) {
                console.log(error);
                console.log(request.responseText);
            }
        });
    };

    $('#armado')
        .on('change', function () {
            var idDestino = 'Fecha_armado';
            var enabled = $(this).val() === "S";
            $('#form').formValidation('enableFieldValidators', idDestino, enabled);
            $('#' + idDestino).attr('disabled', !enabled);
        })
        .change();

</script>
